/*************************************************************************
 * Copyright Â© 2020 Hudyaev Alexy <hudyaev.alexy@gmail.com>
 * This file is part of modegen.
 * Distributed under the GNU Affero General Public License.
 * See accompanying file copying (at the root of this repository)
 * or <http://www.gnu.org/licenses/> for details
 *************************************************************************/

#pragma once

#include <turtle/mock.hpp>
#include "ic/core.hpp"

namespace mic = modegen::ic;

namespace icmocks {

MOCK_BASE_CLASS( generation_part, modegen::ic::generation_part )
{
	MOCK_METHOD(id, 0)
	MOCK_METHOD(name, 0)

	MOCK_METHOD(rename, 1)
	MOCK_METHOD(split_versions, 0)

	MOCK_METHOD(map_to, 1)
	MOCK_METHOD(compiled_input, 0)
};

MOCK_BASE_CLASS( configuration, modegen::ic::configuration )
{
	MOCK_METHOD(generate, 2)
	MOCK_METHOD(parts, 0)

	MOCK_METHOD(dsl_files, 0)

	MOCK_METHOD(split_versions, 1)
	MOCK_METHOD(naming, 1)
	MOCK_METHOD(tmpl_file, 1)
	MOCK_METHOD(map_tmpl, 1)
};

MOCK_BASE_CLASS(dsl_loader, mic::dsl_loader)
{
	MOCK_METHOD( add_search_path, 1)
	MOCK_METHOD( load_input, 1)
	MOCK_METHOD( result, 0)
};

MOCK_BASE_CLASS( factory, mic::factory)
{
	MOCK_METHOD( create_dsl_loader, 1)
	MOCK_METHOD( create_generator, 1)
	MOCK_METHOD( create_part, 0)
};

} // namespace icmocks